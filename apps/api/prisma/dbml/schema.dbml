//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  firstName String [not null]
  lastName String [not null]
  username String [unique, not null]
  phone String [unique, not null]
  password String [not null]
  amharicFirstName String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  amharicLastName String
  gender Gender [not null, default: 'MALE']
  role UserRole [not null, default: 'USER']
  isActive Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  notifications Notification [not null]
  notificationTokens NotificationToken [not null]
  retailShop RetailShop [not null]
  userProfile UserProfile
  warehouse Warehouse [not null]
}

Table Notification {
  id String [pk]
  title String [not null]
  amharicTitle String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  body String [not null]
  amharicBody String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  status Boolean [not null, default: false]
  recipientType RecipientType [not null, default: 'USER']
  recipientId String
  isRead Boolean [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId String
  user User
  notificationReads NotificationRead [not null]
}

Table NotificationRead {
  id String [pk]
  notificationId String [not null]
  userId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  notification Notification [not null]

  indexes {
    (notificationId, userId) [unique]
  }
}

Table NotificationToken {
  id String [pk]
  device_type String [not null]
  token String [unique, not null]
  status Boolean [not null, default: false]
  userId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  user User [not null]
}

Table UserProfile {
  id String [pk]
  userId String [unique, not null]
  photoUrl String
  idUrl String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  addressId String [unique]
  address Address
  user User [not null]
}

Table Category {
  id String [pk]
  name String [unique, not null]
  amharicName String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  description String [not null]
  amharicDescription String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  parentId String
  image String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  parent Category
  subcategories Category [not null]
  products Product [not null]
}

Table Product {
  id String [pk]
  serialNumber String [not null]
  name String [not null]
  amharicName String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  description String [not null]
  amharicDescription String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  categoryId String [not null]
  unit UnitType [not null]
  images String[] [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  category Category [not null]
  retailShopStock RetailShopStock [not null]
  goods StockItem [not null]
  warehouseStock WarehouseStock [not null]

  indexes {
    (id, createdAt) [unique]
  }
}

Table PriceHistory {
  id String [pk]
  price Float [not null]
  purchasedPrice Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShopStockId String
  stockType StockType [default: 'RETAIL_SHOP']
  warehouseStockId String
  retailShopStock RetailShopStock
  warehouseStock WarehouseStock
  activeRetailShopStock RetailShopStock
  activeWarehouseStock WarehouseStock
}

Table Address {
  id String [pk]
  street String
  city String
  lng Float
  lat Float
  formattedAddress String
  amharicFormattedAddress String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShop RetailShop
  userProfile UserProfile
  warehouse Warehouse
}

Table RetailShop {
  id String [pk]
  name String [not null]
  amharicName String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  addressId String [unique]
  retailShopManagerId String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  status Boolean [default: true]
  annualTransaction AnnualTransaction [not null]
  dailyTransaction DailyTransaction [not null]
  goodsTransfersAsDestination GoodsTransfer [not null]
  monthlyTransaction MonthlyTransaction [not null]
  address Address
  retailShopManager User
  retailShopStock RetailShopStock [not null]
  retailShopTransactions RetailShopTransaction [not null]
}

Table Warehouse {
  id String [pk]
  name String [not null]
  amharicName String [note: 'This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*']
  addressId String [unique]
  warehouseManagerId String
  isMain Boolean [not null, default: false]
  status Boolean [default: true]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  goodsTransfersAsDestination GoodsTransfer [not null]
  goodsTransfersAsSource GoodsTransfer [not null]
  retailShopStock RetailShopStock [not null]
  address Address
  warehouseManager User
  warehouseStock WarehouseStock [not null]
}

Table GoodsTransfer {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShopId String
  sourceWarehouseId String [not null]
  destinationWarehouseId String
  transferType TransferType [not null, default: 'WarehouseToWarehouse']
  destinationWarehouse Warehouse
  retailShop RetailShop
  sourceWarehouse Warehouse [not null]
  goods StockItem [not null]
}

Table StockItem {
  id String [pk]
  goodsTransferId String [not null]
  productId String [not null]
  quantity Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  goodsTransfer GoodsTransfer [not null]
  product Product [not null]
}

Table RetailShopStock {
  id String [pk]
  productId String [not null]
  warehouseId String [not null]
  quantity Float [not null]
  maxQuantity Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShopId String [not null]
  activePriceId String [unique]
  priceHistory PriceHistory [not null]
  activePrice PriceHistory
  product Product [not null]
  retailShop RetailShop [not null]
  warehouse Warehouse [not null]
  retailShopTransactionItems RetailShopTransactionItem [not null]

  indexes {
    (productId, retailShopId) [unique]
  }
}

Table RetailShopTransaction {
  id String [pk]
  total Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShopId String [not null]
  retailShop RetailShop [not null]
  retailShopTransactionItems RetailShopTransactionItem [not null]
}

Table RetailShopTransactionItem {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShopTransactionId String [not null]
  quantity Float [not null]
  transactionType TransactionType [not null]
  purchasePrice Float [not null]
  sellingPrice Float [not null]
  subTotal Float [not null]
  retailShopStockId String [not null]
  retailShopStock RetailShopStock [not null]
  retailShopTransaction RetailShopTransaction [not null]
}

Table WarehouseStock {
  id String [pk]
  productId String [not null]
  warehouseId String [not null]
  quantity Float [not null]
  maxQuantity Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  activePriceId String [unique]
  priceHistory PriceHistory [not null]
  activePrice PriceHistory
  product Product [not null]
  warehouse Warehouse [not null]

  indexes {
    (productId, warehouseId) [unique]
  }
}

Table DailyTransaction {
  id String [pk]
  retailShopId String [not null]
  date DateTime [not null]
  totalSales Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShop RetailShop [not null]
}

Table MonthlyTransaction {
  id String [pk]
  retailShopId String [not null]
  month String [not null]
  totalSales Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShop RetailShop [not null]
}

Table AnnualTransaction {
  id String [pk]
  retailShopId String [not null]
  year String [not null]
  totalSales Float [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  retailShop RetailShop [not null]
}

Enum Gender {
  FEMALE
  MALE
}

Enum UserRole {
  USER
  ADMIN
  WAREHOUSE_MANAGER
  RETAIL_SHOP_MANAGER
}

Enum RecipientType {
  USER
  RETAIL_SHOP
  WAREHOUSE
  ALL
}

Enum UnitType {
  PIECES
  KG
  LITER
  METER
  METER_SQUARE
  BOX
  BAG
  BOTTLE
  OTHER
}

Enum StockType {
  WAREHOUSE
  RETAIL_SHOP
}

Enum TransferType {
  WarehouseToWarehouse
  WarehouseToRetailShop
}

Enum TransactionType {
  PURCHASE
  SALE
}

Ref: Notification.userId > User.id [delete: Cascade]

Ref: NotificationRead.notificationId > Notification.id [delete: Cascade]

Ref: NotificationToken.userId > User.id [delete: Cascade]

Ref: UserProfile.addressId - Address.id [delete: Cascade]

Ref: UserProfile.userId - User.id [delete: Cascade]

Ref: Category.parentId - Category.id [delete: Cascade]

Ref: Product.categoryId > Category.id [delete: Cascade]

Ref: PriceHistory.retailShopStockId > RetailShopStock.id [delete: Cascade]

Ref: PriceHistory.warehouseStockId > WarehouseStock.id [delete: Cascade]

Ref: RetailShop.addressId - Address.id

Ref: RetailShop.retailShopManagerId > User.id

Ref: Warehouse.addressId - Address.id

Ref: Warehouse.warehouseManagerId > User.id

Ref: GoodsTransfer.destinationWarehouseId > Warehouse.id

Ref: GoodsTransfer.retailShopId > RetailShop.id

Ref: GoodsTransfer.sourceWarehouseId > Warehouse.id

Ref: StockItem.goodsTransferId > GoodsTransfer.id

Ref: StockItem.productId > Product.id [delete: Cascade]

Ref: RetailShopStock.activePriceId - PriceHistory.id

Ref: RetailShopStock.productId > Product.id [delete: Cascade]

Ref: RetailShopStock.retailShopId > RetailShop.id

Ref: RetailShopStock.warehouseId > Warehouse.id

Ref: RetailShopTransaction.retailShopId > RetailShop.id

Ref: RetailShopTransactionItem.retailShopStockId > RetailShopStock.id

Ref: RetailShopTransactionItem.retailShopTransactionId > RetailShopTransaction.id

Ref: WarehouseStock.activePriceId - PriceHistory.id

Ref: WarehouseStock.productId > Product.id [delete: Cascade]

Ref: WarehouseStock.warehouseId > Warehouse.id

Ref: DailyTransaction.retailShopId > RetailShop.id

Ref: MonthlyTransaction.retailShopId > RetailShop.id

Ref: AnnualTransaction.retailShopId > RetailShop.id