"use client";
import { ApolloWrapper } from "@/lib/apollo-provider";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { ThemeProvider } from "@emotion/react";
import { createTheme } from "@/theme";
import useGetMe from "@/hooks/useGetMe";
import { useEffect } from "react";
import { usePathname, useRouter } from "next/navigation";
import Guard from "@/components/Guard";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

declare module "@mui/material/styles" {
  interface Palette {
    neutral50: string;
    neutral100: string;
    neutral200: string;
    neutral300: string;
    neutral400: string;
    neutral500: string;
    neutral600: string;
    neutral700: string;
    neutral800: string;
    neutral900: string;
  }
  interface PaletteOptions {
    neutral50: string;
    neutral100: string;
    neutral200: string;
    neutral300: string;
    neutral400: string;
    neutral900: string;
    neutral500: string;
    neutral600: string;
    neutral700: string;
    neutral800: string;
  }
}

declare module "@mui/material/Box" {
  interface BoxPropsColorOverrides {
    neutral50: true;
    neutral100: true;
    neutral200: true;
    neutral300: true;
    neutral400: true;
    neutral500: true;
    neutral600: true;
    neutral700: true;
    neutral800: true;

    neutral900: true;
  }
}
const theme = createTheme({
  colorPreset: "blue",
  contrast: "normal",
  direction: "ltr",
  paletteMode: "light",
  responsiveFontSizes: true,
});

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <ApolloWrapper>
          <ThemeProvider theme={theme}>
            <Guard excludedRoutes={["/auth"]}>{children}</Guard>
          </ThemeProvider>
        </ApolloWrapper>
      </body>
    </html>
  );
}
